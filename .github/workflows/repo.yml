name: Create repo

on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        default: 'latest-main'
        type: string
        description: 'Version'

concurrency:
    group: repo
    cancel-in-progress: true

jobs:
  repo:
    runs-on: ubuntu-latest
    container: ghcr.io/solopasha/kde6-copr/buildroot:latest
    permissions:
      contents: write

    steps:
      - name: Prepare
        run: |
          dnf -y in gh parallel

      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up ORAS
        uses: oras-project/setup-oras@8d34698a59f5ffe24821f0b48ab62a3de8b64b20

      - name: Download packages
        env:
          REPOSITORY: ${{ github.event.repository.name }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          VERSION: ${{ inputs.version }}
        run: |
          for pkgname in nvidia-kmod nvidia-modprobe nvidia-persistenced nvidia-settings xorg-x11-drv-nvidia; do
            echo "${pkgname}:${VERSION}" >> packages.txt
            echo "Downloading ${pkgname}:${VERSION}"
            oras pull "ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY}/${pkgname}:${VERSION}" &>/dev/null
            if oras pull "ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY}/${pkgname}:${VERSION}-debuginfo" &>/dev/null; then
                echo "${pkgname}:${VERSION}-debuginfo" >> packages.txt
            else
                echo "No debuginfo for ${pkgname}"
            fi
          done

      - name: Createrepo
        run: |
          mkdir -p repo/latest
          sort -u packages.txt > repo/packages.txt
          mv ./*/*.rpm repo/latest
          rename -v '~' '_' repo/latest/*.rpm || :
          createrepo_c repo/

      - name: Repofile
        run: |
          cat << 'EOF' > repo/${{ github.event.repository.name }}.repo
          [${{ github.event.repository.name }}]
          name=${{ github.repository }}
          baseurl=https://github.com/${{ github.repository }}/releases/download/
          type=rpm-md
          skip_if_unavailable=True
          gpgcheck=1
          gpgkey=https://raw.githubusercontent.com/solopasha/kde6-copr/refs/heads/unstable/RPM-GPG-KEY-solopasha
          repo_gpgcheck=0
          enabled=1
          enabled_metadata=1
          EOF

      - name: Upload
        env:
          GH_TOKEN: ${{ github.token }}
          REPOSITORY: ${{ github.event.repository.name }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
        run: |
          git config --global --add safe.directory '*'
          gh release delete latest &>/dev/null || :
          gh release delete repodata &>/dev/null || :
          mapfile -t files < <(find ./repo -type f ! -name '*.xml.zst' ! -name '*.xml')
          gh release create latest
          bash upload.sh "${files[@]}"
          gh release create repodata ./repo/repodata/*
